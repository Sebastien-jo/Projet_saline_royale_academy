# This is a basic workflow to help you get started with Actions

name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - dev
      - main
  pull_request:
    branches:
      - dev
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-symfony:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-symfony
          tags: |
            latest

      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          file: ./docker/prod/alpine/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build-and-push-nginx:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-nginx
          tags: |
            latest

      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          file: ./docker/prod/nginx/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  tests-php:
    needs: build-and-push-symfony
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/sebastien-jo/projet_saline_royale_academy-symfony:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: php-cs-fixer
        shell: bash
        run: |
          cd /var/www/symfony
          ./vendor/bin/php-cs-fixer fix --diff --config=.php_cs.strict $@

      - name: Rector
        shell: bash
        run: |
          cd /var/www/symfony
          ./vendor/bin/rector process `git diff --name-only --cached --diff-filter=d | grep "\.php"` --dry-run

      - name: Phpstan
        shell: bash
        run: |
          cd /var/www/symfony
          php -d memory_limit=-1 ./vendor/bin/phpstan clear-result-cache
          php -d memory_limit=-1 ./vendor/bin/phpstan

  Deploy:
    if: |
      github.ref_name == 'main'
    needs:
      - build-and-push-symfony
      - build-and-push-nginx
      - tests-php
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Pull newest images
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERV }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.HOST }}
          script: |
            docker stop docker_symfony_1
            docker rm docker_symfony_1
            docker stop docker_nginx_1
            docker rm docker_nginx_1
            docker volume ls
            docker volume rm docker_symfony-sra
            docker pull ghcr.io/sebastien-jo/projet_saline_royale_academy-symfony:latest
            docker pull ghcr.io/sebastien-jo/projet_saline_royale_academy-nginx:latest
      - name: Up containers
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERV }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.HOST }}
          script: |
            cd .docker
            docker-compose up -d
            docker cp docker_symfony_1:/var/www/react/public/build /tmp
            docker cp /tmp/build/ docker_symfony_1:/var/www/symfony/public/build
            rm -rf /tmp/build
      - name: Launch migrations
        id: migration
        if: steps.migration.outputs.migrations == 'true'
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERV }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.HOST }}
          script: |
            docker exec -ti docker-symfony-1 bash
            bin/console doctrine:migration:migrate
