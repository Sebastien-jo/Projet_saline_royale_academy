version: '3'

services:
  nginx:
    container_name: nginx-sra
    image: nginx:alpine
    volumes:
      - ./docker/dev/nginx/server.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "8080:80"
  symfony:
    build:
      context: .
      dockerfile: ./docker/dev/alpine/Dockerfile
    image: projet_saline_royale_academy-symfony
    container_name: symfony-sra
    restart: on-failure
    environment:
      ELASTICSEARCH_USER: elastic
      STRIPE_SECRET_KEY : ${STRIPE_SECRET_KEY}
      STRIPE_PUBLIC_KEY : ${STRIPE_PUBLIC_KEY}
      ELASTICSEARCH_PASSWORD: ${ELASTIC_PASSWORD}
      ELASTICSEARCH_HOST: http://elasticsearch:9200/
      DATABASE_URL: mysql://$MYSQL_USER:$MYSQL_PASSWORD@db/$MYSQL_DATABASE?serverVersion=mariadb-$MYSQL_VERSION
    ports:
      - "1234:1234"
    volumes:
      - ./app/back:/var/www/symfony:delegated
      - ./docker/dev/nginx/symfony.conf:/etc/nginx/http.d/default.conf
      - ./app/front/public/build:/var/www/symfony/public/build

    networks:
      - web
      - acpSymfony

  node:
    build:
      context: .
      dockerfile: ./docker/dev/node/Dockerfile
    container_name: node-sra
    restart: on-failure
    volumes:
      - "./app/front:/app"
      - "node:/app/node_modules"
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - FAST_REFRESH=false
    networks:
      - web

  db:
    image: 'mariadb:10.11'
    restart: on-failure
    container_name: db-sra
    volumes:
      #      - './docker/bdd/my.cnf:/etc/mysql/conf.d/my.cnf:ro'
      - 'db-data-sra:/var/lib/mysql/:delegated'
    environment:
      MYSQL_ROOT_PASSWORD: $MYSQL_PASSWORD
      MYSQL_DATABASE: $MYSQL_DATABASE
      MYSQL_USER: $MYSQL_USER
      MYSQL_PASSWORD: $MYSQL_PASSWORD
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - acpSymfony

  mailhog:
    image: mailhog/mailhog
    networks:
      - acpSymfony
    ports:
      - '8025:8025'
      - '1025:1025'

  stripe:
    image: stripe/stripe-cli
    command: ["listen", "--forward-to=symfony:1234/webhook" ]
    environment:
      - STRIPE_API_KEY=${STRIPE_SECRET_KEY}
    depends_on:
      - symfony
    networks:
        - acpSymfony

volumes:
  db-data-sra:
    driver: local
  elasticsearch-data:
    driver: local
  node:
    driver: local

networks:
  web:
    driver: bridge
  acpSymfony:
    driver: bridge

